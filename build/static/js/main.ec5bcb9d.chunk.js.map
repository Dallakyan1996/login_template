{"version":3,"sources":["Components/PageNotFound/PageNotFound.js","helpers/history.js","helpers/hendle-response.js","services/API.js","PrivateRoute/PrivateRoute.js","Components/Header/Header.js","Assets/PDF/CFU_Description_v0.13_06-Oct-2021.pdf","Components/SideBar/SideBar.js","Components/LoginPage/LoginPage.js","Components/ScoringResult/ScoringResult.js","Assets/images/loader.svg","Components/Search/Search.js","Components/ChangePassword/ChangePassword.js","Components/Footer/footer.js","Components/PrivacyPolicy/PrivacyPolicy.js","Components/TermsConditions/TermsConditions.js","Components/UsersList/UsersList.js","Components/Dashboard/TimeMaps/lineChart.js","Components/Dashboard/TimeMaps/lineChart2.js","Components/Dashboard/TimeMaps/lineChart3.js","Components/Dashboard/TimeMaps/lineChart4.js","Components/Dashboard/DashboardTable/DashboardTable.js","Components/Dashboard/Dashboard.js","Components/CreateUserRequest/CreateUserRequest.js","Components/CreateUser/CreateUser.js","Components/RevokeUser/RevokeUser.js","Components/RevokeUserRequest/RevokeUserRequest.js","App.js","reducers/patient-info-reducer.js","redux/store.js","index.js"],"names":["PageNotFound","className","to","history","createBrowserHistory","handleResponse","response","text","then","data","JSON","parse","err","authenticationService","logout","window","location","reload","ok","indexOf","status","pathname","error","message","statusText","Promise","reject","currentUserSubject","BehaviorSubject","localStorage","getItem","login","email","password","requestOptions","method","headers","body","stringify","fetch","process","user","setItem","next","removeItem","patientStatus","site_id","patient_id","acces_token","access_token","toString","push","patient","changePasswordPost","old_password","password_confirmation","getModelList","GET","res","createUser","name","site","access_level","engine_type","revokeUser","user_id","comment","getTable","tableName","getUsersList","getPatientsList","getCreate","getRevoke","currentUser","asObservable","value","endPoint","PrivateRoute","children","restOfProps","currentUserValue","DicernaAdminPaths","DicernaAdminRoute","cfuCurrentUser","users_module","path","Header","href","role","id","data-toggle","aria-haspopup","aria-expanded","src","alt","aria-labelledby","onClick","SideBar","exact","activeClassName","target","algorithmPDF","LoginPage","props","initialValues","username","validationSchema","Yup","shape","required","onSubmit","setStatus","setSubmitting","from","state","errors","touched","isSubmitting","htmlFor","type","component","autoComplete","disabled","React","Component","ScoringResult","setPatientId","setScoring","siteId","patientId","mask","patientStatusId","Search","useState","setSiteId","setPatientStatusId","setPatientStatus","loader","setLoader","idError","setIdError","noPatient","setNoPatient","scoring","validSiteId","RegExp","validPatientId","useEffect","patientIdInput","document","getElementById","length","focus","siteIdInput","loaderImage","onChange","e","autoFocus","placeholder","defaultValue","isNaN","parseInt","replace","test","getPatientStatus","catch","ChangePassword","successText","setSuccessText","errorText","setErrorText","oldPassword","newPassword","confirmPassword","success","Object","values","Footer","PrivacyPolicy","TermsConditions","UsersList","setData","amountUsers","usersList","dataIsReturned","usersCount","setState","a","dataIsReturn","columns","selector","map","i","v","format","created_at","Line","data-tip","data-for","getContent","Line2","today","Date","date","getFullYear","getMonth","getDate","randDate","eotDate","today1","diffTime","Math","abs","diffDays","ceil","diffTimeToday","b","style","left","Line3","Line4","customStyles","headCells","backgroundColor","cells","fontSize","DashboardTable","useSelector","dispatch","useDispatch","statuses","sortData","dataFilt","payload","patientData","subject_id","randomization_date","eot_date","toUpperCase","sortable","rigth","cell","right","center","options","label","event","noHeader","title","Clicked","Dashboard","filter","CreateUserRequest","infoBuble","setInfoBuble","readOnly","setReadOnly","succesNoty","setSuccesNoty","selectValid","setSelectValid","succesNotify","preventDefault","trim","pattern","CreateUser","createsLengthStorage","requests","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","RevokeUser","revokesLengthStorage","revokes","creator","RevokeUserRequest","commentFiledReq","setCommentFiledReq","selectReq","setSelectReq","setUsersList","rows","cols","App","useLocation","scrollTo","initialState","patientInfo","action","store","createStore","render"],"mappings":"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","file":"static/js/main.ec5bcb9d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './page-not-found.css';\r\n\r\nconst PageNotFound = () => (\r\n  <div className=\"dgb\">\r\n    <div className=\"notFoundDiv\">\r\n      <div className=\"pageNotFoundWrapper\">\r\n        <h1 className=\"pageNotFoundNum\">404</h1>\r\n        <hr />\r\n        <h1 className=\"notFoundTextDiv\">This page could be not found</h1>\r\n      <div className=\"goHomeDiv\">\r\n        <Link to=\"/\">\r\n          Go Home\r\n        </Link>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default PageNotFound;","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import { authenticationService } from '../services/API';\r\nimport { history } from './history';\r\n\r\nexport function handleResponse(response) {\r\n    return response.text().then(text => {\r\n        try {\r\n            var data = text && JSON.parse(text);\r\n        }\r\n        catch (err) {\r\n            authenticationService.logout();\r\n            window.location.reload(true);\r\n        }\r\n        if (!response.ok) {\r\n            if ([401, 403].indexOf(response.status) !== -1) {\r\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                if (history.location.pathname !== '/login') {\r\n                    authenticationService.logout();\r\n                    window.location.reload(true);\r\n                }\r\n            }\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}","import { BehaviorSubject } from 'rxjs';\r\nimport { history } from './../helpers/history';\r\nimport { handleResponse } from '../helpers/hendle-response';\r\n\r\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('cfuCurrentUser')));\r\n\r\nexport const authenticationService = {\r\n    login,\r\n    logout,\r\n    patientStatus,\r\n    changePasswordPost,\r\n    getModelList,\r\n    createUser,\r\n    revokeUser,\r\n    getTable,\r\n    getUsersList,\r\n    getPatientsList,\r\n    getCreate,\r\n    getRevoke,\r\n    currentUser: currentUserSubject.asObservable(),\r\n    get currentUserValue() { return currentUserSubject.value }\r\n};\r\n\r\nfunction GET(endPoint) {\r\n    if (JSON.parse(localStorage.getItem('cfuCurrentUser')) !== null) {\r\n        var acces_token = JSON.parse(localStorage.getItem('cfuCurrentUser')).access_token.toString()\r\n    }\r\n    else {\r\n        history.push('/login')\r\n    }\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Authorization': 'Bearer ' + acces_token,\r\n\r\n        }\r\n    }\r\n    return fetch(endPoint, requestOptions)\r\n}\r\n\r\n\r\nfunction getUsersList() {\r\n    return GET(process.env.REACT_APP_GET_USERS_LIST).then(handleResponse)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n}\r\n\r\nfunction getModelList() {\r\n    return GET(process.env.REACT_APP_GET_STUDY_MODEL).then(handleResponse)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n}\r\n\r\nfunction getPatientsList() {\r\n    return GET(process.env.REACT_APP_GET_PATIENTS_LIST).then(handleResponse)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n}\r\n\r\nfunction getCreate() {\r\n    return GET(process.env.REACT_APP_USER_REQUEST).then(handleResponse).then(res => {\r\n        return res;\r\n    });\r\n}\r\nfunction getRevoke() {\r\n    return GET(process.env.REACT_APP_USER_REVOKE).then(handleResponse).then(res => {\r\n        return res;\r\n    });\r\n}\r\n\r\nfunction login(email, password) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n    };\r\n\r\n    return fetch(process.env.REACT_APP_LOGIN_API, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            localStorage.setItem('cfuCurrentUser', JSON.stringify(user));\r\n            currentUserSubject.next(user);\r\n            return user;\r\n        });\r\n}\r\nfunction patientStatus(site_id, patient_id) {\r\n    if (JSON.parse(localStorage.getItem('cfuCurrentUser')) !== null) {\r\n        var acces_token = JSON.parse(localStorage.getItem('cfuCurrentUser')).access_token.toString()\r\n    }\r\n    else {\r\n        history.push('/login')\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            'Authorization': 'Bearer ' + acces_token,\r\n        },\r\n        body: JSON.stringify({ site_id, patient_id }),\r\n    };\r\n    return fetch(process.env.REACT_APP_SEARCH_API, requestOptions)\r\n        .then(handleResponse)\r\n        .then(patient => {\r\n            return patient;\r\n        });\r\n}\r\n\r\n\r\n\r\nfunction createUser(name, email, site, access_level) {\r\n    if (JSON.parse(localStorage.getItem('cfuCurrentUser')) !== null) {\r\n        var acces_token = JSON.parse(localStorage.getItem('cfuCurrentUser')).access_token.toString()\r\n    }\r\n    else {\r\n        history.push('/login')\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            'Authorization': 'Bearer ' + acces_token,\r\n        },\r\n        body: JSON.stringify({ engine_type: \"cfu\", name, email, site, access_level }),\r\n    };\r\n    return fetch(process.env.REACT_APP_USER_REQUEST, requestOptions)\r\n        .then(handleResponse)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n}\r\n\r\nfunction revokeUser(user_id, comment) {\r\n    if (JSON.parse(localStorage.getItem('cfuCurrentUser')) !== null) {\r\n        var acces_token = JSON.parse(localStorage.getItem('cfuCurrentUser')).access_token.toString()\r\n    }\r\n    else {\r\n        history.push('/login')\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            'Authorization': 'Bearer ' + acces_token,\r\n        },\r\n        body: JSON.stringify({ engine_type: \"cfu\", user_id, comment }),\r\n    };\r\n    return fetch(process.env.REACT_APP_USER_REVOKE, requestOptions)\r\n        .then(handleResponse)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n}\r\n\r\nfunction changePasswordPost(old_password, password, password_confirmation) {\r\n    if (JSON.parse(localStorage.getItem('cfuCurrentUser')) !== null) {\r\n        var acces_token = JSON.parse(localStorage.getItem('cfuCurrentUser')).access_token.toString()\r\n    }\r\n    else {\r\n        history.push('/login')\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            'Authorization': 'Bearer ' + acces_token,\r\n        },\r\n        body: JSON.stringify({ old_password, password, password_confirmation }),\r\n    };\r\n    return fetch(process.env.REACT_APP_CHANGE_PASSWORD, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getTable(tableName) {\r\n    return GET(process.env.REACT_APP_GET_TABLE + tableName).then(handleResponse)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n}\r\n\r\n\r\nfunction logout() {\r\n    localStorage.removeItem('cfuCurrentUser');\r\n    currentUserSubject.next(null);\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PageNotFound from '../Components/PageNotFound/PageNotFound';\r\nimport { authenticationService } from './../services/API'\r\n\r\n\r\nexport const PrivateRoute = ({ children, ...restOfProps }) => {\r\n    const currentUser = authenticationService.currentUserValue;\r\n    return currentUser ? (\r\n        <Route {...restOfProps}>{children}</Route>\r\n    ) : (\r\n        <Redirect to=\"/login\" />\r\n    );\r\n}\r\n\r\n\r\nconst DicernaAdminPaths = ['/', '/search']\r\nexport const DicernaAdminRoute = ({ children, ...restOfProps }) => {\r\n    const cfuCurrentUser = JSON.parse(localStorage.getItem('cfuCurrentUser'))\r\n    return ((cfuCurrentUser && cfuCurrentUser.user.users_module === 2 || cfuCurrentUser.user.users_module === 3) && DicernaAdminPaths.indexOf(restOfProps.path) === -1) ? <Route {...restOfProps}\r\n        path={restOfProps.path}>{children}</Route> : <PageNotFound />\r\n}","import \"./Header.css\";\r\nimport React from \"react\";\r\nimport { authenticationService } from \"../../services/API\";\r\nimport { Link } from 'react-router-dom';\r\nimport { history } from './../../helpers/history';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  const logout = () => {\r\n    authenticationService.logout();\r\n    history.push('/login');\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to='/'>\r\n        <span className=\"testSpan\">DCR-A1AT-201: Conditional Follow-Up Portal</span>\r\n      </Link>\r\n      <div className=\"fakeDataInfo\">\r\n        Please note that this is a test data for UAT.\r\n      </div>\r\n      <div className=\"dropdown show\">\r\n        <a\r\n          className=\"drop\"\r\n          href=\"/#\"\r\n          role=\"button\"\r\n          id=\"dropdownMenuLink\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          <span className=\"userSpan\">\r\n            <span className='userName'>{authenticationService.currentUserValue.user.name}</span>\r\n            <img\r\n              className=\"userImg\"\r\n              src=\"https://a1at.studymonitoring.net/img/undraw_profile.svg\"\r\n              alt=\"user\"\r\n            />\r\n          </span>\r\n        </a>\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n          <Link className=\"dropdown-item drop-down-a\" to=\"/change-password\">\r\n            <i className=\"fa fa-lock logoutIcon\"></i>\r\n            Change Password\r\n          </Link>\r\n          <Link className=\"dropdown-item drop-down-a\" to=\"/login\"\r\n            onClick={logout}>\r\n            <i className=\"fa fa-sign-out fa-2x logoutIcon\"></i>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/CFU_Description_v0.13_06-Oct-2021.35cb78c2.pdf\";","import \"./SideBar.css\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaChartBar, FaSearch, FaUserFriends, FaRegFilePdf, FaUserPlus, FaUserMinus } from \"react-icons/fa\";\r\nimport algorithmPDF from \"./../../Assets/PDF/CFU_Description_v0.13_06-Oct-2021.pdf\"\r\n\r\nconst SideBar = () => {\r\n    return <>\r\n        <nav className=\"main-menu\">\r\n            <ul className=\"sideBarItemsUl\">\r\n                {JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module > 0 &&\r\n                    <li className=\"dashboard\">\r\n                        <NavLink exact activeClassName=\"active\" to=\"/\">\r\n                            <FaChartBar className=\"sideBarIcons\" />\r\n                            <span className='nav-text'>\r\n                                Dashboard\r\n                            </span>\r\n                        </NavLink>\r\n                    </li>}\r\n                {JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module > 0 ?\r\n                    <li className=\"has-subnav search\">\r\n                        <NavLink exact activeClassName=\"active\" to=\"/search\">\r\n                            <FaSearch className=\"sideBarIcons\" />\r\n                            <span className='nav-text'>\r\n                                Search\r\n                            </span>\r\n                        </NavLink>\r\n                    </li> : <li className=\"has-subnav search\">\r\n                        <NavLink exact activeClassName=\"active\" to=\"/\">\r\n                            <FaSearch className=\"sideBarIcons\" />\r\n                            <span className='nav-text'>\r\n                                Search\r\n                            </span>\r\n                        </NavLink>\r\n\r\n                    </li>}\r\n                {(JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module === 2\r\n                    || JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module === 3) &&\r\n                    <li className=\"has-subnav usersListEnable\">\r\n                        <NavLink activeClassName=\"active\" to=\"/users-list\">\r\n                            <FaUserFriends className=\"sideBarIcons\" />\r\n                            <span className='nav-text'>\r\n                                Users List\r\n                            </span>\r\n                        </NavLink>\r\n                    </li>\r\n                }\r\n                {(JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module === 2\r\n                    || JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module === 3) &&\r\n                    <li className=\"has-subnav usersListEnable\">\r\n                        <NavLink activeClassName=\"active\" to=\"/create-user\">\r\n                            <FaUserPlus className=\"sideBarIcons\" />\r\n                            <span className='nav-text'>\r\n                                Create Request\r\n                            </span>\r\n                        </NavLink>\r\n                    </li>\r\n                }\r\n                {(JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module === 2\r\n                    || JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module === 3) &&\r\n                    <li className=\"has-subnav usersListEnable\">\r\n                        <NavLink activeClassName=\"active\" to=\"/revoke-user\">\r\n                            <FaUserMinus className=\"sideBarIcons\" />\r\n                            <span className='nav-text'>\r\n                                Revoke Request\r\n                            </span>\r\n                        </NavLink>\r\n                    </li>\r\n                }\r\n                <li className=\"has-subnav usersListEnable\">\r\n                    <NavLink activeClassName=\"active\" target=\"_blank\" to={algorithmPDF}>\r\n                        <FaRegFilePdf className=\"sideBarIcons\" />\r\n                        <span className='nav-text'>\r\n                            Algorithm Description\r\n                        </span>\r\n                    </NavLink>\r\n                </li>\r\n                {/* <li className=\"has-subnav usersListEnable\">\r\n                    <NavLink activeClassName=\"active\"\r\n                        to='/create-user-request'>\r\n                        <FaRegFilePdf className=\"sideBarIcons\" />\r\n                        <span className='nav-text'>\r\n                            create\r\n                        </span>\r\n                    </NavLink>\r\n                </li> */}\r\n                {/* <li className=\"has-subnav notifications\">\r\n                    <FaBell className=\"sideBarIcons\" />\r\n                    <span className='nav-text'>\r\n                        Notifications\r\n                    </span>\r\n                </li> */}\r\n            </ul>\r\n        </nav>\r\n    </>\r\n}\r\n\r\nexport default SideBar;","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport \"./login.css\";\r\nimport { authenticationService } from \"../../services/API\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // redirect to home if already logged in\r\n    if (authenticationService.currentUserValue) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  render() {\r\n\r\n    // console.log(Yup.object().shape())\r\n    return (\r\n      <>\r\n        <div className=\"login_header\">\r\n          <h2>A1AT Conditional Follow Up</h2>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row d-flex justify-content-center\">\r\n            <div className=\"col-md-6 form_div\">\r\n              <div>\r\n                <Formik\r\n                  initialValues={{\r\n                    username: \"\",\r\n                    password: \"\",\r\n                  }}\r\n                  validationSchema={Yup.object().shape({\r\n                    username: Yup.string().required(\"Email is required\"),\r\n                    password: Yup.string().required(\"Password is required\"),\r\n                  })}\r\n                  onSubmit={(\r\n                    { username, password },\r\n                    { setStatus, setSubmitting }\r\n                  ) => {\r\n                    setStatus();\r\n                    authenticationService.login(username, password).then(\r\n                      (user) => {\r\n                        const { from } = this.props.location.state || {\r\n                          from: { pathname: \"/\" },\r\n                        };\r\n                        this.props.history.push(from);\r\n                      },\r\n                      (error) => {\r\n                        setSubmitting(false);\r\n                        setStatus(error);\r\n                      }\r\n                    );\r\n                  }}\r\n                >\r\n                  {({ errors, status, touched, isSubmitting }) => (\r\n                    <Form>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <Field\r\n                          name=\"username\"\r\n                          type=\"text\"\r\n                          className={\r\n                            \"form-control\" +\r\n                            (errors.username && touched.username\r\n                              ? \" is-invalid\"\r\n                              : \"\")\r\n                          }\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"username\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Field\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          autoComplete=\"off\"\r\n                          className={\r\n                            \"form-control\" +\r\n                            (errors.password && touched.password\r\n                              ? \" is-invalid\"\r\n                              : \"\")\r\n                          }\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"password\"\r\n                          component=\"div\"\r\n                          className=\"invalid-feedback\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group submit_div\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary login_btn\"\r\n                          disabled={isSubmitting}\r\n                        >\r\n                          Log in\r\n                        </button>\r\n                      </div>\r\n                      {status && (\r\n                        <div className={\"alert alert-danger\"}>Wrong Email or Password</div>\r\n\r\n                      )}\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport { LoginPage };\r\n","import React from \"react\";\r\nimport \"./scoringResult.css\";\r\nimport InputMask from \"react-text-mask\";\r\n\r\nconst ScoringResult = (props) => {\r\n\r\n  const backBtnOnClickFn = () => {\r\n    props.setPatientId('');\r\n    props.setScoring(false);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"scoringResultContainer\">\r\n        <div className=\"backBtnDiv\">\r\n          <button className='backBtn mb-3' onClick={backBtnOnClickFn}><div>Back</div></button>\r\n        </div>\r\n        <div className='scoringResultWrapper'>\r\n          <div className='scoringResultHeader'>\r\n            <h4 className='my-0'>Search results</h4>\r\n          </div>\r\n          <div className='scoringContent'>\r\n            <div className='patientIdDiv'>\r\n              <label>Patient ID</label>\r\n              <InputMask\r\n                className='form-control searchInput idInputDisable' value={props.siteId + props.patientId} disabled\r\n                mask={[\r\n                  /\\d/,\r\n                  /\\d/,\r\n                  /\\d/,\r\n                  \"-\",\r\n                  /\\d/,\r\n                  /\\d/,\r\n                  /\\d/,\r\n                  \"-\",\r\n                  /\\d/,\r\n                  /\\d/,\r\n                  /\\d/,\r\n                ]}\r\n              />\r\n            </div>\r\n            <div className='patientStatusDiv' >\r\n              <h4 className={\r\n                props.patientStatusId === 1 ? \"wasNotRand\" : (props.patientStatusId === 2 ? \"inEOT\" : (props.patientStatusId === 3 ? \"toFollowUp\" : \"cfuCriterieColor\"))}>{props.patientStatus}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScoringResult;","export default __webpack_public_path__ + \"static/media/loader.b50b39c2.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport \"./search.css\";\r\nimport InputMask from \"react-text-mask\";\r\nimport { authenticationService } from \"../../services/API\";\r\nimport { Formik, Form } from \"formik\";\r\nimport ScoringResult from \"../ScoringResult/ScoringResult\";\r\nimport loaderImage from './../../Assets/images/loader.svg';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst getPatientStatus = (site_id, patient_id) => {\r\n  return authenticationService.patientStatus(site_id, patient_id);\r\n};\r\n\r\nconst Search = (props) => {\r\n  const currentUser = JSON.parse(localStorage.getItem('cfuCurrentUser'));\r\n  const [siteId, setSiteId] = useState(currentUser ? currentUser.user.site_id : null);\r\n  const [patientStatusId, setPatientStatusId] = useState(null);\r\n  const [patientId, setPatientId] = useState(\"\");\r\n  const [patientStatus, setPatientStatus] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n  const [idError, setIdError] = useState(false);\r\n  const [noPatient, setNoPatient] = useState(false);\r\n  const [scoring, setScoring] = useState(false);\r\n  const validSiteId = new RegExp(/^\\d{3}[-]\\d{3}$/g);\r\n  const validPatientId = new RegExp(/^\\d{3}$/g);\r\n  // const notify = () => toast.success(\"Wow so easy!\", {\r\n  //   position: \"top-right\",\r\n  //   autoClose: 5000,\r\n  //   hideProgressBar: false,\r\n  //   closeOnClick: true,\r\n  //   pauseOnHover: true,\r\n  //   draggable: true,\r\n  //   progress: undefined,\r\n  // });\r\n  useEffect(() => {\r\n    const patientIdInput = document.getElementById('patientIdInput');\r\n    if (siteId && siteId.length === 7 && siteId[siteId.length - 1] !== '_') {\r\n      if (patientIdInput) {\r\n        patientIdInput.focus()\r\n      }\r\n    }\r\n  }, [siteId])\r\n\r\n  useEffect(() => {\r\n    const siteIdInput = document.getElementById('siteIdInput')\r\n    if (siteId && siteId.length === 7 && siteId[siteId.length - 1] !== '_' && patientId.length === 0) {\r\n      siteIdInput.focus()\r\n    }\r\n  }, [patientId])\r\n\r\n\r\n\r\n\r\n  function submitPatientID() {\r\n    if (!validSiteId.test(siteId)) {\r\n      setIdError(true);\r\n    }\r\n    else if (!validPatientId.test(patientId)) {\r\n      setIdError(true);\r\n    }\r\n    else { getResult(siteId, patientId); setLoader(true) };\r\n  }\r\n  function getResult(site_id, patient_id) {\r\n    return getPatientStatus(site_id, patient_id)\r\n      .then((res) => {\r\n        if (res.status === 'error') {\r\n          setNoPatient(true);\r\n          setLoader(false);\r\n        }\r\n        else {\r\n          setPatientStatus(res.status.text);\r\n          setPatientStatusId(res.status.id)\r\n          setLoader(false);\r\n          setScoring(true);\r\n          setLoader(false);\r\n        }\r\n      })\r\n      .catch(function () {\r\n        setLoader(false);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      {scoring ? (\r\n        <ScoringResult patientId={patientId} siteId={siteId} setPatientId={setPatientId} patientStatusId={patientStatusId} patientStatus={patientStatus} scoring={scoring} setScoring={setScoring} />\r\n      ) : (\r\n        <div>\r\n          {loader ? <div className=\"loaderDiv\"><img src={loaderImage} className=\"img-fluid\" alt=\"\" /></div> : null}\r\n          <div className=\"searchWrapper\">\r\n            <div className=\"searchHeader\">\r\n              <h3> Search </h3>\r\n            </div>\r\n            {/* <button onClick={notify}>Notiasdasdasdasdfy!</button>\r\n            <ToastContainer className=\"\" /> */}\r\n            <div className=\"searchBtn\">\r\n              <Formik initialValues={{ id: \"\" }}>\r\n                <Form>\r\n                  <div className='maskInputsDiv'>\r\n                    <div className='siteIdDiv'>\r\n                      <label> Patient ID </label>\r\n                      <InputMask\r\n                        onChange={(e) => {\r\n                          setSiteId(e.target.value);\r\n                          setIdError(false);\r\n                          setNoPatient(false)\r\n                        }}\r\n                        id='siteIdInput'\r\n                        disabled={currentUser ? (currentUser.user.site_id !== '*' ? true : false) : null}\r\n                        autoFocus={currentUser ? (currentUser.user.site_id === '*' ? \"autofocus\" : null) : null}\r\n                        placeholder=\"xxx-xxx\"\r\n                        className={\r\n                          idError || noPatient\r\n                            ? \"idErrorInput form-control searchInput\"\r\n                            : \"form-control searchInput\"\r\n                        }\r\n                        mask={[\r\n                          /\\d/,\r\n                          /\\d/,\r\n                          /\\d/,\r\n                          \"-\",\r\n                          /\\d/,\r\n                          /\\d/,\r\n                          /\\d/,\r\n                        ]}\r\n\r\n                        defaultValue={isNaN(parseInt(currentUser ? currentUser.user.site_id.replace(\"-\", \"\") : null)) ? null : parseInt(currentUser.user.site_id.replace(\"-\", \"\"))}\r\n                      />\r\n                    </div>\r\n                    <div className='patientSearchIdDiv'>\r\n                      {/*<label></label>*/}\r\n                      <InputMask\r\n                        id='patientIdInput'\r\n                        onChange={(e) => {\r\n                          setPatientId(e.target.value);\r\n                          setIdError(false);\r\n                          setNoPatient(false)\r\n                        }}\r\n                        autoFocus={currentUser ? (currentUser.user.site_id !== '*' ? \"autofocus\" : null) : null}\r\n                        placeholder=\"xxx\"\r\n                        className={\r\n                          idError || noPatient\r\n                            ? \"idErrorInput form-control searchInput\"\r\n                            : \"form-control searchInput\"\r\n                        }\r\n                        mask={[\r\n                          /\\d/,\r\n                          /\\d/,\r\n                          /\\d/,\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  {noPatient ? (\r\n                    <p className=\"noPatient\">Patient ID does not exist</p>\r\n                  ) : null}\r\n                  {idError ? (\r\n                    <p className=\"invalidIdMessage\">Invalid Patient ID format</p>\r\n                  ) : null}\r\n                  <button onClick={submitPatientID}>Search</button>\r\n                </Form>\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;","import './changePassword.css';\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { authenticationService } from \"../../services/API\";\r\n\r\nconst ChangePassword = () => {\r\n    const [successText, setSuccessText] = useState(\"\")\r\n    const [errorText, setErrorText] = useState(\"\")\r\n\r\n\r\n\r\n    return <>\r\n        <div className=\"changePasswordContainer\">\r\n            <div className='changePasswordContent'>\r\n                <div className='changePasswordHeader'>\r\n                    <h4>Change Password</h4>\r\n                </div>\r\n                <div className='changePasswordWrapper'>\r\n                    <Formik\r\n                        initialValues={{\r\n                            oldPassword: \"\",\r\n                            newPassword: \"\",\r\n                            confirmPassword: \"\"\r\n                        }}\r\n                        validationSchema={Yup.object().shape({\r\n                            oldPassword: Yup.string().required(\"Old Password field is required\"),\r\n                            newPassword: Yup.string().required(\"New Password field is required\"),\r\n                            confirmPassword: Yup.string().required(\"Confirm Password field is required\"),\r\n                        })}\r\n                        onSubmit={(\r\n                            { oldPassword, newPassword, confirmPassword },\r\n                            { setStatus, setSubmitting }\r\n                        ) => {\r\n                            setStatus();\r\n                            authenticationService.changePasswordPost(oldPassword, newPassword, confirmPassword).then(\r\n                                (res) => {\r\n                                    if (res.success) {\r\n                                        setSuccessText(res.success)\r\n                                    }\r\n                                    else {\r\n                                        try {\r\n                                            setErrorText(Object.values(Object.values(res)[1])[0][0])\r\n                                        }\r\n                                        catch {\r\n                                            setErrorText(\"Old Password is incorrect\")\r\n                                        }\r\n                                    }\r\n                                    setSubmitting(false)\r\n                                },\r\n                            )\r\n                        }}\r\n                    >\r\n                        {({ errors, status, touched, isSubmitting, onChange }) => (\r\n                            <Form>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"oldPassword\">Old Password</label>\r\n                                    <Field\r\n                                        id=\"oldPassword\"\r\n                                        name=\"oldPassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Old Password\"\r\n                                        className={\r\n                                            \"form-control\" +\r\n                                            (errors.oldPassword && touched.oldPassword\r\n                                                ? \" is-invalid\"\r\n                                                : \"\")\r\n                                        }\r\n                                    />\r\n                                    <ErrorMessage\r\n                                        name=\"oldPassword\"\r\n                                        component=\"div\"\r\n                                        className=\"invalid-feedback\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"newPassword\">New Password</label>\r\n                                    <Field\r\n                                        name=\"newPassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"New Password\"\r\n                                        autoComplete=\"off\"\r\n                                        className={\r\n                                            \"form-control\" +\r\n                                            (errors.newPassword && touched.newPassword\r\n                                                ? \" is-invalid\"\r\n                                                : \"\")\r\n                                        }\r\n                                    />\r\n                                    <ErrorMessage\r\n                                        name=\"newPassword\"\r\n                                        component=\"div\"\r\n                                        className=\"invalid-feedback\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                                    <Field\r\n                                        name=\"confirmPassword\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        autoComplete=\"off\"\r\n                                        className={\r\n                                            \"form-control\" +\r\n                                            (errors.confirmPassword && touched.confirmPassword\r\n                                                ? \" is-invalid\"\r\n                                                : \"\")\r\n                                        }\r\n                                    />\r\n                                    <ErrorMessage\r\n                                        name=\"confirmPassword\"\r\n                                        component=\"div\"\r\n                                        className=\"invalid-feedback\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group submit_div\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary\"\r\n                                        disabled={isSubmitting}\r\n                                        onClick={() => {\r\n                                            setSuccessText(\"\")\r\n                                            setErrorText(\"\")\r\n                                        }}\r\n                                    >\r\n                                        Update\r\n                                    </button>\r\n                                </div>\r\n                                {errorText && (\r\n                                    <div className={\"alert alert-danger\"}>{errorText}</div>\r\n\r\n                                )}\r\n                                {successText && (\r\n                                    <div className={\"alert alert-success\"}>{successText}</div>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ChangePassword;","import './footer.css';\r\nimport { Link } from  'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <footer className=\"sticky-footer bg-white footer\">\r\n                <div className=\"d-flex align-items-center justify-content-between pl-3 pr-3\">\r\n                    <img src=\"https://a1at.studymonitoring.net/img/logo/PCT-Logo.svg\" alt=\"PCT logo\" />\r\n                    <div>\r\n                        <Link className=\"text-underline\" to=\"/privacy-policy\">Privacy Policy</Link>\r\n                        <Link className=\"text-underline\" to=\"/terms-and-conditions\">Terms &amp; Conditions</Link>\r\n                    </div>\r\n                    <a className=\"text-underline\" href=\"mailto:site_support_a1at_201@pctlabresearch.com\">Email to Support Team</a>\r\n                    <img src=\"https://a1at.studymonitoring.net/img/logo/synlab.png\" alt=\"SYNLAB logo\" />\r\n                </div>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import './PrivacyPolicy.css';\r\nimport { Link } from 'react-router-dom';\r\nconst PrivacyPolicy = (props) => {\r\n    const currentUser = localStorage.getItem('cfuCurrentUser')\r\n    return (<>\r\n        {!currentUser &&\r\n            <div className='privacyPolicyHeader'>\r\n                <Link to='/login'><div className=\"privacyPolicy\"><h4>DCR-A1AT-201: Conditional Follow-Up Portal</h4></div></Link>\r\n            </div>\r\n        }\r\n        <div className=\"privacyPolicyConainer container mt-5 mb-5\">\r\n            <div className='textContainer row justify-content-center'>\r\n                <div className=\"privacyPolicy\">\r\n                    <div className=\"privacyPolicyBackBtn\">\r\n                        <Link to=\"/login\" className=\"back-button\">\r\n                            <div className='backBtnTerms'></div> Back\r\n                        </Link>\r\n                        <h2>Privacy Policy</h2>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"text\">\r\n                    <h4>General</h4>\r\n                    <p>The present Privacy Policy constitutes an integral part of the Terms of Use – a legally binding agreement between you and PCT Lab Research (PCT) (hereafter interchangeably referred to as “PCT”, \"Us\", \"We\", or \"Our\"). Any capitalized terms and definitions not specifically defined herein shall have the meaning assigned to them in the Terms of Use.</p>\r\n                    <p>This Privacy Policy (“Policy”) is aimed to inform Our users (“Users”, “Your” or “You”) of Our policies and procedures regarding the collection, use, transfer and disclosure of information We receive from Users and/or Users submit (input) into the System. </p>\r\n                    <p>This Policy does not apply to: (1) websites, applications or services that display or link to different privacy policies or statements; (2) relations between the medical institutions, staff and/or doctors and respective patients undergoing clinical trials of medicines; (3) relations between Client and PCT. We are not responsible for the actions of the Client, medical institutions, staff and/or doctors, as well as of any third party people or companies, to whom You might provide any personally identifiable information within the scope of Your use of the System. </p>\r\n                    <p>By accessing into or using the System You explicitly and irrevocably consent and agree to the collection, use and disclosure of information We receive from You in relation to the access into and use of the System and information You otherwise input into the System in accordance with this Privacy Policy.</p>\r\n                    <p>Please read this Privacy Policy carefully. Please do not access or start using the System if You have not done so, or if You do not agree to this Privacy Policy.</p>\r\n                    <h4>Updates and Modifications</h4>\r\n                    <p>PCT reserves the right to update this Privacy Policy at any time, in its sole discretion, to enhance its better performance and by posting changes through the following link:\r\n                        <a href=\"http://a1at-cfu.studymonitoring.net/login\">http://a1at-cfu.studymonitoring.net/</a>. The PCT also reserves the right, upon request of the Client, to modify and/or change the System. PCT may also, but not necessarily, give You an additional notice thereof, via messaging within the System or otherwise. If You continue to use the System (irrespective of Us giving You an additional notice as mentioned above) following the posting of updates, changes or modifications, You thereby explicitly and irrevocably agree to and accept the updates, changes or modifications. Except as otherwise stated, all amended terms shall automatically be effective from the day they are initially posted</p>\r\n                    <p>If You at any point do not agree to any portion of then-current Privacy Policy, Your license to use the System shall immediately terminate, and You must immediately stop using the System.</p>\r\n                    <h4>Collection and Use of Information</h4>\r\n                    <p>You cannot access the System without the login and password of the user account generated by Us and provided to the Client. The only information we gather during Your use of the System through the user account allocated to You by the Client is from standard server logs. These include Your IP (Internet Protocol) address, domain name, browser type, operating system, and information such as the web site that referred You to Us, and the dates/times of those visits.</p>\r\n                    <p>However, during the use of System no personally indefinable information is requested by the PCT or elsewhere submitted into the System. </p>\r\n                    <p>In order to access Your user account within the System You need to receive a specifically generated login and password from the Client. The number, as well as terms and condition of provision of user accounts to medical institutions, staff and/or doctors is determined by the Client, upon their sole discretion and do not constitute a subject matter of this Privacy Policy. </p>\r\n                    <p>During Your use of the System, the following information can be or elsewhere will be inputted and/or registered into the System: (1) medical and/or health data, (2) data on disease and their treatment procedure, (3) information on vitals of patients, (4) information on complications, if any, (5) medical output, (6) medical treatment results, (7) types, names, effects, application and other consumption details of medicine undergoing trials, (8) steps and procedure of clinical trials and/or any other patient related information from various clinical trials of medicines, 9) other information relevant to clinical trials (hereinafter jointly referred to as “Medical Data”). </p>\r\n                    <p>We use information, including without limitation Medical Data, that You input into the System or elsewhere submit to Us to enable the Client to use such data as described below. Furthermore, we may use information regarding Your use of the System, including Medical Data that You input into the System, to ensure Your compliance with the Terms of Use. </p>\r\n                    <p>The Client may use the information that is inputted into the System to (a) analyze the medical outcome of use of medicines undergoing clinical trials; (b) track, analyze, study, survey and examine the medical and/or health conditions of patients undergoing clinical trials, results of such trials, vitals of patients, their health conditions prior and after the use of medicines undergoing clinical trials; (c) generate and download various reports on the outcome, consequences or current state of all or any medicines undergoing clinical trials; (d) download aggregated data on the types of diseases, treatment procedures and outcomes as a result of clinical trials of medicines. As agreed between Us and the Client we may use the information for the above-mentioned purposes as well. Furthermore, we may use the information to: (a) contact You about Your use of the System, such as for administrative purposes and for ensuring Your compliance with the Terms of Use, as well as for requesting feedback or evaluation in relation to Your use of the System; (b) notify You about important changes to Our policies or the System;  (c) request feedback regarding the System and to improve the System; (d) make sure that the login via Your account is genuine. </p>\r\n                    <h4><i>Information Collected via Use of the System </i></h4>\r\n                    <p><i>Via Service Features</i></p>\r\n                    <p>We may collect Your information in connection with input features of the System, such as when You submit or elsewhere upload patient and/or medicine related information via the System.</p>\r\n                    <p><i>Via Log files</i></p>\r\n                    <p>When You access Our System, We may collect standard information about Your computer/device, such as Your IP address, browser type and operating system version. We use this information to help diagnose problems with Our server, to administer the System, and to improve its quality. The information gathered during general browsing of the System is used to analyze trends and usage of the System and to improve its usefulness.. </p>\r\n                    <h4>Disclosure of Collected Information</h4>\r\n                    <p><i>Disclosure of Medical Data </i></p>\r\n                    <p>You understand, that all or part of the information collected via the System will be used only for medical, biological and other research purposes by the Client and/or medical institutions, staff and/or doctors who initially inputted such Medical Data into the System, as well as their supervisors. The Medical Data contained within the System will not be disclosed to any third party by Us. However, We do not guarantee or elsewhere re-ensure You that Client or medical institutions, staff and/or doctors will not disclose the Medical Data contained within the System as per procedures and in accordance with the conditions of separate agreements concluded between Yourself and such institution, or in any other manner whatsoever. </p>\r\n                    <p><i>Third Party Service Providers</i></p>\r\n                    <p>We may use third party companies to perform services related to the System.  These services include data storage, database management and hosting services.  They are obligated to use the information available on the System only to perform tasks on Our behalf. </p>\r\n                    <p><i>Safety, Security and Compliance with Law</i></p>\r\n                    <p>Your information and other information on the System may be accessed and monitored as necessary to provide access into or use of the System and may be disclosed: (i) when We have a good faith belief that We are required to disclose the information in response to a legal process (for example, a court order); (ii) to satisfy any applicable laws or regulations (iii) where We believe that the System is  being used in the commission of an illegal activity, including to report such activity or to exchange information with other parties for the purposes of fraud prevention and credit risk reduction; (iv) when We have a good faith belief that there is an emergency that poses a threat to the health and/or safety of You, another person or the public generally; and (v) in order to protect the rights or property of PCT, including to enforce Our Terms of Use.</p>\r\n                    <p><i>Change of Ownership</i></p>\r\n                    <p>In the event PCT undergoes a restructuring, liquidation or sale of all or a portion of its assets, We may transfer all or part of Your information and other information within the System, to the successor organization or person in such transition.</p>\r\n                    <h4>Data security</h4>\r\n                    <p>Any information provided to Us by Users of the System is held with the utmost care and security, and will not be used in ways other than as set forth in this Privacy Policy or in ways to which You have explicitly consented. We employ a range of techniques and security measures to protect the information maintained in the System from loss, misuse, unauthorized access or disclosure, alteration or destruction. </p>\r\n                    <p>However, no website or Internet transmission is completely secure, and We cannot guarantee that unauthorized access, hacking, data loss, or other breaches will never occur. Also, We cannot guarantee the security of Your data while it is being transmitted into the System (including, without limitation, when transmission occurs via messaging), and any transmission is at Your own risk. We assume no responsibility for the security of information. </p>\r\n                    <h4>Contact Information</h4>\r\n                    <p>If You have any questions about this Policy, please feel free to contact Us online through the System or by e-mail at info@pctlabresearch.com </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default PrivacyPolicy;","// import './PrivacyPolicy.css';\r\nimport { Link } from 'react-router-dom';\r\nimport './TermsConditions.css'\r\n\r\nconst TermsConditions = (props) => {\r\n    const currentUser = localStorage.getItem('cfuCurrentUser')\r\n    return (<>\r\n        {!currentUser &&\r\n            <div className='termsConditionsHeader'>\r\n                <Link to='/login'><div className=\"termsConditions\"><h4>DCR-A1AT-201: Conditional Follow-Up Portal</h4></div></Link>\r\n            </div>\r\n        }\r\n        <div className=\"termsConditionsConainer container mt-5 mb-5\">\r\n            <div className='textContainer row justify-content-center'>\r\n                <div className=\"termsConditions\">\r\n                    <div className=\"termsConditionsBackBtn\">\r\n                            <Link to=\"/login\" className=\"back-button\">\r\n                                <div className='backBtnTerms'></div> Back\r\n                            </Link>\r\n                        <h2>Terms of Use</h2>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                <div className=\"container mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"text\">\r\n                                <h4>General</h4>\r\n                                <p>\r\n                                    The present Terms of Use constitute a legally binding agreement between you (hereafter interchangeably referred to as “You” or “Your”) PCT Lab Research (PCT) (hereafter interchangeably referred to as “PCT”, \"Us\", \"We\", or \"Our\") regarding Your use of a web-based online Electronic Data Collection and Monitoring System specifically designed for Haemonetics Corp. (“hereinafter referred to as “Client”), including any information, data, text, video, audio, pictures messaging and/or any other functionality and/or content contained therein, including, without limitation, when placed on, downloaded or  added into the system by You (together, the “Content”), as well as any underlying databases, software and/or technology made available for use via the provided system (hereafter  altogether referred to as the “System”). Our Privacy Policy, contained in a separate document, form an unalienable part of these Terms of Use.\r\n                                </p>\r\n                                <p>\r\n                                    By accessing to or using the System You explicitly and irrevocably agree to be bound by these Terms of Use. PCT reserves the right to seek all remedies available by law for any violation of these Terms of Use.\r\n                                </p>\r\n                                <p>\r\n                                    Please read these Terms of Use (including the Privacy Policy) carefully. Please do not access, login or start using the System anyhow if You have not done so, or if You do not agree to any of these Terms of Use.\r\n                                </p>\r\n                                <h4>The PCT Name and Emblem. Ownership</h4>\r\n                                <p>The PCT name and emblem are the exclusive property of PCT. They are protected under international and US laws. Unauthorized use is prohibited. They may not be copied or reproduced or otherwise used in any way without the prior written permission of PCT. </p>\r\n                                <p>\r\n                                    The name, emblem, codes, underlying software, databases, servers, as well as all right, title and interest in and to the Systemand all uses thereof, including without limitation all copyright, trademark, patent and other intellectual property rights therein, shall be and remain solely with PCT or its respective licensors, and may not be used without PCT’s express written permission. The System may only be accessed through user accounts generated by Us and any unauthorized use of the System, its content, name and/or emblem is prohibited. The arrangements for generating and/or accessing Your user account shall be made between You and Client.\r\n                                </p>\r\n                                <p>\r\n                                    The ownership of analytical or other data, information inputted into the System, as well as any data, information or other output generated within or through use of the System generally belongs to the Client and is not subject to these Terms of Use. In any case PCT has no right, title or interest in and to such data.\r\n                                </p>\r\n                                <p>\r\n                                    At the same time, You do not acquire any ownership rights over any data or information by using the System.\r\n                                </p>\r\n                                <h4>The System</h4>\r\n                                <p>The System was developed and designed by PCT for Client and can be used for studies conducted by Client within its business activities. The System belongs to PCT and neither the Client nor You do not acquire any ownership or intellectual property rights in and to the System, any of its components (including its underlying software) by registering and/or accessing and/or using the System through generated user account. The System is developed and designed for medical institutions, staff and/or doctors aimed at providing an online system to input medical and/or health data, medical treatment results, medical output and/or any other patient related information from various clinical trials of medicines, analyze such data and export respective reports as per categories and cases of all clinical trials conducted and registered via the System. </p>\r\n                                <p>The System is accessible through individual user accounts created and managed by PCT. Particularly, PCT generates and/or creates individual user accounts with their respective logins and passwords for and in the number of users requested by the Client. The number of requested accounts, as well as any relations between the Client and PCT are governed by private contractual relations between the Client and PCT and are outside the scope of applicability of these Terms of Use. </p>\r\n                                <p>The patients subject to clinical trials of medicine are not identified within the System and are referred to by using Individual Patient Number that are allocated to them randomly and prior to inputting their data into the System. The System also provides a possibility to review the input data internally, analyze it and/or export reports upon necessity.</p>\r\n                                <h4>Updates and Modifications</h4>\r\n                                <p>The applicable features or tools of the System are designed and developed by PCT on the basis of its criteria provided and/or approved by the Client. The System is evolving, and PCT reserves the right to update the System with or without prior notice for any reason, in its sole discretion, including but not limited to these Terms of Use. The PCT also reserves the right, upon request of the Client, to modify and/or change the System. If You continue to use the System (irrespective of PCT giving You a designated notice as mentioned above) following the posting of updates, changes or modifications, You thereby explicitly and irrevocably agree to and accept updates, changes or modifications. Except as otherwise stated, all amended terms shall automatically be effective immediately when initially posted. No amendment to the Terms of Use or Privacy Policy shall apply to any dispute of which We had actual notice before the date of the amendment. </p>\r\n                                <p>If You at any point do not agree to any portion of then-current Terms of Use.</p>\r\n                                <h4>Getting access into the System</h4>\r\n                                <p>In order to register and access the individual account within the System a Request to generate login and password shall be submitted to PCT. </p>\r\n                                <p>PCT creates/generates the login and password for the Users and sends them to the Client via e-mail.</p>\r\n                                <p>The provided login and password are distributed among the employees, partners, associates, management or other staff members of the Client, as well as various medical institutions and doctors as per separate agreements and contracts that are not subject to terms and conditions of these Terms of Use and Privacy Policy attached hereto. We do not interfere and bear any responsibility as to provision, dissemination or distribution of logins and passwords by the Client. We do not control or anyhow monitor the compliance of ultimate users to these Terms of Use and/or Privacy Policy. The Users of System may at any time, upon their sole discretion, change the passwords for their respective accounts.</p>\r\n                                <h4>Use of the System and Medical Data Processing</h4>\r\n                                <p>For the purposes of using the System no personally indefinable information is requested by the PCT or otherwise submitted into the System. </p>\r\n                                <p>The System is accessed and used only via user accounts created by the PCT and does not require any additional registration, authentication or initialization. </p>\r\n                                <p>Any analytical or other data, information or statistical output generated within or through use of the System derives from data from medical institutions, staff and/or doctors which is inputted by them directly into the System through their respective individual user accounts. </p>\r\n                                <p>Inputted data relate to the following: (1) medical and/or health data, (2) data on disease and their treatment procedure, (3) information on vitals of patients, (4) information on complications, if any, (5) medical output, (6) medical treatment results, (7) types, names, effects, application and other consumption details of medicine undergoing trials, (8) steps and procedure of clinical trials and/or any other patient related information from various clinical trials of medicines, (9) other information relevant to clinical trials (hereinafter jointly referred to as “Medical Data”). </p>\r\n                                <p>The patients undergoing clinical trials of medicines are referred to only via their Individual Patient Number within the System. The System does not gather, process or transfer any personally identifiable information and/or data regarding the patients. </p>\r\n                                <p>Individual Patient Number is assigned to the patient undergoing clinical trials of medicines randomly by the respective medical institutions, staff and/or doctors prior to inputting their Medical Data into the System.  Such Individual Patient Number does not comply with any regularity or pattern. </p>\r\n                                <p>Inputted Medical Data is used only for analytical and research purposes and for generating various reports through the System. Such reports may be generated only by the Client. </p>\r\n                                <p>All the Medical Data may be used by Us in accordance with these Terms of Use (including, particularly, the Privacy Policy). The whole responsibility to ensure that the Medical Data is true, accurate, current and complete lies with You.</p>\r\n                                <p>Our Terms of Use along with Privacy Policy do not regulate the relations between the patients undergoing clinical trials of medicines and the medical institutions, staff and/or doctors who collect, use, transfer or disclose, as may be applicable, the gathered Medical Data. Any agreements, data processing consents or other related documents required for data processing, including its collection, use, transfer or disclosure shall be ensured separately and independently by You or by the relevant medical institutions, staff and/or doctors. </p>\r\n                                <h4>Limited License to use</h4>\r\n                                <p>Subject to Your acceptance of these Terms of Use, You are granted a non-exclusive, revocable, limited, non-transferable and non-sub-licensable right to access and use the System solely for the purposes described herein (“License”). You undertake not to use the System for any other purpose.</p>\r\n                                <p>You acknowledge and agree that Your License does not include: (a) alteration, modification, revision, other transformation, creation of derivative works from or otherwise making any derivative uses of the System or any information or content therein; (b) decompilation, reverse engineering or otherwise attempting to derive the source code for the System (except to the extent applicable laws specifically prohibit restriction of such activities); or (c) any use of the System other than for its intended purpose as expressly stated in these Terms of Use.</p>\r\n                                <p>Unless explicitly stated herein, nothing in these Terms of Use shall be construed as conferring any license to intellectual property, proprietary or other rights, whether by estoppel, implication or otherwise.</p>\r\n                                <p>Any use of the System other than as specifically authorized herein, without Our prior written permission, is strictly prohibited and will terminate the License granted herein, and may subject You to liability for violations of law.</p>\r\n                                <p>For the purposes of determining Your compliance with the License and enforcing these Terms of Use, We may: (a) review the Medical Data for purposes of ensuring its compliance with the applicable rules of safety, security, morality, child protection and/or compliance with any applicable laws and regulations and these Terms of Use and/or elimination of any kind of incompliance, breach and/or abuse thereof, (b) suspend and/or delete Your account for any violation of these Terms of Use and/or Privacy Policy. </p>\r\n                                <h4>Suspension and Termination of Access to and Use of the System</h4>\r\n                                <p>You have the right to suspend or terminate Your access to or Your use of the System or any part thereof at any time. If You do not agree to these Terms of Use, Your sole and exclusive remedy is not to use the System. You understand and agree that stopping your use of the System is Your sole and exclusive remedy with respect to any dispute with Us.</p>\r\n                                <p>We reserve the right to stop offering and/or supporting the System or any part thereof, including the created user accounts at any time either permanently or temporarily. In such event Your License to use the System or a part thereof will be automatically terminated or suspended.</p>\r\n                                <p>We may also terminate Your access to the System with or without notice to You, if We (in our sole discretion) deem that You have violated these Terms of Use or have otherwise caused or may cause damage to Us or any third party.</p>\r\n                                <h4>Conduct Requirements and Restrictions</h4>\r\n                                <p>Your use of and access into the System is subject to all applicable national and international laws and regulations, and You agree not to violate such laws and regulations in Your use of and access into the System. In addition, You agree that: (a) You will not interfere with another user’s use and enjoyment of the System; (b) You will not interfere with or disrupt the System security measures; (c) You will not interfere with or disrupt networks connected to the System and will comply with all regulations, policies and procedures of such networks; (d) You will comply with applicable laws regarding the transmission of technical data exported and imported to and from different jurisdictions in accordance with these Terms of Use with respect to or relating to any of Your dealings with the System; (e) You will not use the System to engage in any illegal conduct; (f) You will acquire all necessary agreements and/or consents (at your own initiative, cost and responsibility) from patients undergoing clinical trials of medicine (or otherwise ensure that such agreements and/or consents are acquired) prior to collecting, using, transferring or disclosing their Medical Data; (g) When accessing into or using the System You shall at all times comply with these Terms of Use and applicable laws and regulations.</p>\r\n                                <p>As a condition of use of the System, You promise that: (a) You will not use the System in the event You have not reached the age permissible for use of the System in Your jurisdiction; (b) You will not use the System for any purpose that is in violation with public or moral rights, including, without limitation, (i) deceiving, misleading, abusing, harassing, intimidating any other user; (ii) attempting to restrict other users from using the System; (iii) transmitting or causing to be transmitted any content that is deceitful, misleading, defamatory, libelous, hateful, profane; (iv) transmitting or causing to be transmitted any communication intended to obtain password, account, personal information of other users;  (v) uploading or attaching files that contain viruses, corrupted files, or any other similar software or programs that may damage the operation of another user’s computer; (vi) deleting any author attributions, legal notices or proprietary designations or labels in any file that is uploaded; (vii) falsifying the origin of source of software or other material contained in a file that is uploaded; (viii) downloading any file posted by another user that the user knows, or reasonably should know, cannot be legally distributed in such manner; (c) You will not violate any intellectual property rights of third parties.</p>\r\n                                <p>At the same time, We accept no responsibility or liability in respect of any of Your conduct in connection with your use of the System and/or any Medical Data submitted by You on the System including, for example, responsibility or liability for the accuracy or reliability of any information, data, opinions, advice or statements made in such material.</p>\r\n                                <p>You also agree to defend, indemnify and hold harmless PCT, as well as their founders, subsidiaries, affiliates, officers, employees and independent contractors from any loss, liability, damages and expenses (including, without limitation, legal fees) resulting from any claim or demand made by any third party arising out of or in connection with Your use of the System, Your violation of these Terms of Use, or Your violation of the rights of any third party.</p>\r\n                                <h4>Technical problems</h4>\r\n                                <p>There may be occasions where the System may be interrupted, or any other technical difficulties may occur in connection with Your access to and use of the System. You acknowledge that in such cases We shall bear no liability for any suspension, discontinuation or interruption of the System. </p>\r\n                                <h4>Disclaimer</h4>\r\n                                <p>YOU EXPRESSLY AGREE THAT USE OF THE SYSTEM IS AT YOUR SOLE RISK, AND IS PROVIDED ON AN \"AS IS\" BASIS WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, WARRANTIES OF TITLE OR IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. WE DISCLAIM ANY LIABILITY OR RESPONSIBILITY ARISING FROM YOUR USE OF THE SYSTEM OR THE MEDICAL DATA INPUTTED INTO THE SYSTEM. PCT AND MEMBERS OF THEIR STAFF, THEIR AFFILIATES AND  THEIR CONTRACTORS, SHALL NOT BE LIABLE FOR ANY FINANCIAL OR OTHER CONSEQUENCES  WHATSOEVER ARISING FROM YOUR USE OF THE SYSTEM OR FROM THEMEDICAL DATA INPUTTED IN THE SYSTEM, INCLUDING THE INAPPROPRIATE, IMPROPER OR FRAUDULENT USE OF THE SYSTEM OR SUCH MEDICAL DATA. NO REPRESENTATIONS AND WARRANTIES OF ANY KIND CONCERNING THE SYSTEM ARE GIVEN, INCLUDING RESPONSIBILITY FOR ANY INFECTION BY VIRUS OR ANY OTHER CONTAMINATION OR BY ANYTHING WHICH HAS DESTRUCTIVE PROPERTIES, AND FURTHERMORE, ANY AND ALL WARRANTIES, EXPRESS, IMPLIED OR STATUTORY REGARDING THE WEBSITE OR THE USE THEREOF BY YOU TO THE FULL EXTENT PERMITTED BY LAW. WITHOUT LIMITING THE GENERALITY OF THE FOREGOING, PCT DOES NOT MAKE, AND HAS  NOT MADE, ANY REPRESENTATION OR WARRANTY THAT THE SYSTEM IS ACCURATE, COMPLETE, RELIABLE, CURRENT, ERROR-FREE, FREE FROM VIRUSES OR OTHER HARMFUL COMPONENTS OR NOT INTERFERE WITH OTHER FUNCTIONS, FEATURES OR SERVICES ON YOUR DEVICE WITH WHICH YOU ARE ACCESSING THE WEBSITE. </p>\r\n                                <p>YOU EXPRESSLY AGREE THAT PCT MAKES NO REPRESENTATION AND GIVES NO WARRANTY, EITHER EXPRESS OR IMPLIED, AS TO THE ACCURACY OR TRUTHFULNESS OF ANY INFORMATION PLACED ON THE SYSTEM BY ACCOUT USERS, AND CANNOT BE HELD LIABLE IN CONNECTION THERETO. </p>\r\n                                <h4>Limitation of Liability</h4>\r\n                                <p>YOU ACKNOWLEDGE AND AGREE THAT, TO THE MAXIMUM EXTENT PERMISSIBLE BY LAW, THE LIMITATION OF LIABILITY CONTAINED HEREIN APPLIES TO ANY AND ALL APPLICATIONS OR INJURIES WHATSOEVER CAUSED BY OR RELATED TO USE OF, OR INABILITY TO USE, THE SYSTEM UNDER ANY CAUSE OR ACTION WHATSOEVER OF ANY JURISDICTION, INCLUDING, WITHOUT LIMITATION, ACTIONS FOR BREACH OF WARRANTY, BREACH OF CONTRACT OR TORT (INCLUDING NEGLIGENCE).  PCT, INCLUDING ITS SUBSIDIARIES, AFFILIATES, OR ANY OF THEIR RESPECTIVE DIRECTORS, OFFICERS, EMPLOYEES, CONTRACTORS OR AGENTS,  SHALL NOT BE LIABLE TO YOU OR ANY OTHER PERSON OR ENTITY FOR ANY INDIRECT, ACTUAL, INCIDENTAL, PUNITIVE, SPECIAL OR CONSEQUENTIAL DAMAGES, LOST INCOME, REVENUE OR PROFITS, LOST OR DAMAGED DATA AS A RESULT OF COMMUNICATION AND COOPERATION THROUGH OUR SYSTEM, EVEN IF ANY OF THOSE PERSONS OR ENTITIES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES OR SUCH DAMAGES ARE FORESEEABLE.</p>\r\n                                <p>SOME STATES OR JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR THE LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, IN SUCH STATES OR JURISDICTIONS, THE LIABILITY OF PCT SHALL BE LIMITED TO THE FULLEST EXTENT PERMITTED BY LAW.</p>\r\n                                <h4>Miscellaneous</h4>\r\n                                <p>The formation, construction and interpretation of these Terms of Use, and Your use of the System, shall be governed by the laws of State of Massachusetts, giving no effect to choice of law provisions. </p>\r\n                                <p>Any dispute not covered by these Terms of Use and relating to these Terms of Use shall be subject to the review and final settlement by the courts of State of Massachusetts with applicability of laws of State of Massachusetts. Decisions of the Arbitration Court are final and binding upon You.</p>\r\n                                <p>If You violate these Terms of Use or if You engage in any conduct that We, in Our sole discretion, believe is in violation of any applicable law or is otherwise harmful to the interests of PCT or any third party, We  may choose to immediately suspend or terminate Your access into or Your use of the System or any part thereof without any prior notice sent to You. </p>\r\n                                <p>If any provision of these Terms of Use is held to be unlawful, void or for any reason unenforceable, that provision shall be deemed severable from this agreement and shall not affect the validity and enforceability of the remaining provisions. These Terms of Use constitute Your entire agreement with PCT with respect to their subject matter, and supersede any other previous written terms and any oral or promotional statements regarding such subject matter. Any other matters as to Your access to, registration within or use of the System shall be regulated with the Client on separate contractual basis and do not form a subject matter of these Terms of Use or Privacy Policy attached hereto. At the same time, You acknowledge, that the relations between the Client and PCT also are not governed by these Terms of Use. Any waiver of enforcement of any provision of these Terms of Use or any breach thereof, in any one instance, shall not constitute a waiver of such term or condition or any subsequent breach thereof. If any dispute arises under these Terms of Use, the prevailing party shall be reimbursed by the other party for any and all legal fees and costs associated therewith.</p>\r\n                                <h4>Contact Information.</h4>\r\n                                <p>If You have any questions about these Terms of Use, please feel free to contact Us online as specified within the System or by e-mail at info@pctlabresearch.com</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default TermsConditions;","import { authenticationService } from \"./../../services/API\";\r\nimport React, { useEffect, useState } from 'react'\r\nimport loaderImage from './../../Assets/images/loader.svg';\r\nimport Moment from 'react-moment';\r\n// import DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\nimport './usersList.css'\r\n\r\nconst UsersList = () => {\r\n\r\n    let tableData = {};\r\n    const [data, setData] = useState([])\r\n    const [state, setState] = useState({\r\n        amountUsers: null,\r\n        usersList: [],\r\n        dataIsReturned: false,\r\n        loader: true,\r\n        usersCount: []\r\n    });\r\n\r\n    const columns = [\r\n        {\r\n            name: \"id\",\r\n            selector: \"id\"\r\n        },\r\n        {\r\n            name: \"name\",\r\n            selector: \"name\"\r\n        },\r\n        {\r\n            name: \"email\",\r\n            selector: \"email\"\r\n        },\r\n        {\r\n            name: \"site_id\",\r\n            selector: \"site_id\"\r\n        },\r\n        {\r\n            name: \"created_at\",\r\n            selector: \"created_at\"\r\n        }\r\n    ];\r\n    useEffect(() => {\r\n        authenticationService.getUsersList().then(async (res) => {\r\n            setState({\r\n                dataIsReturn: true,\r\n                amountUsers: res.length,\r\n                usersList: res,\r\n                loader: false\r\n            });\r\n            setData(res)\r\n        })\r\n    }, [])\r\n\r\n    tableData = {\r\n        columns,\r\n        data,\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {state.loader ? <div className=\"loaderDiv\"><img src={loaderImage} className=\"img-fluid\" alt=\"\" /></div> : null}\r\n            {(state.dataIsReturn &&\r\n                <div className=\"usersListWrapper\">\r\n                    {/* <DataTableExtensions\r\n                        print={false}\r\n                        export={true}\r\n                        filter={false}\r\n                        {...tableData}\r\n                    > */}\r\n                        <table className='custom-table  table-responsive-md '>\r\n                            <thead >\r\n                                <tr className=\"headTr\">\r\n                                    <th>\r\n                                        <h4 className=\"headerTrTh\">\r\n                                            #\r\n                                        </h4>\r\n                                    </th>\r\n                                    <th>\r\n                                        <h4 className=\"headerTrTh\">\r\n                                            Name\r\n                                        </h4>\r\n                                    </th>\r\n                                    <th>\r\n                                        <h4 className=\"headerTrTh\">\r\n                                            Email\r\n                                        </h4>\r\n                                    </th>\r\n                                    <th>\r\n                                        <h4 className=\"headerTrTh\">\r\n                                            Site\r\n                                        </h4>\r\n                                    </th>\r\n                                    <th className='createdAt '>\r\n                                        <h4 className=\"headerTrTh\">\r\n                                            Created at\r\n                                        </h4>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {state.usersList.map((i, v) => {\r\n                                    return <tr key={i.id} className='tbodyTr'>\r\n                                        <td className=\"firsTd\">\r\n                                            <h4>{v + 1}</h4>\r\n                                        </td>\r\n                                        <td>\r\n                                            <h4>{i.name}</h4>\r\n                                        </td>\r\n                                        <td>\r\n                                            <h4>{i.email}</h4>\r\n                                        </td>\r\n                                        <td>\r\n                                            <h4>{i.site_id === \"*\" ? \"All sites\" : i.site_id}</h4>\r\n                                        </td>\r\n                                        <td className='lastTd'>\r\n                                            <h4>\r\n                                                <Moment format=\"YYYY-MM-DD HH:mm:ss\">{i.created_at}</Moment>\r\n                                            </h4>\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    {/* </DataTableExtensions> */}\r\n                </div>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UsersList;","import \"./lineChart.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport const Line = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"lineWrapper\">\r\n        <div className=\"basisDiv\"></div>\r\n        <div className=\"eotDiv\" data-tip=\"\" data-for=\"line1EOT\"></div>\r\n        <div className=\"cfuDiv\" data-tip=\"\" data-for=\"line1RandDate\"></div>\r\n        <div className=\"statusDiv\"></div>\r\n        <ReactTooltip\r\n          id=\"line1EOT\"\r\n          getContent={() => {\r\n            return <div>EOT Date</div>;\r\n          }}\r\n        />\r\n        <ReactTooltip\r\n          id=\"line1RandDate\"\r\n          getContent={() => {\r\n            return <div>Randomization Date</div>;\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Line;\r\n","import \"./lineChart.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nconst Line2 = (props) => {\r\n  var today = new Date();\r\n  var date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n  // var date = \"2021-12-21\"\r\n  const randDate = new Date(props.randDate);\r\n  const eotDate = new Date(props.eotDate);\r\n  const today1 = new Date(date);\r\n  const diffTime = Math.abs(eotDate - randDate);\r\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  const diffTimeToday = Math.abs(randDate - today1);\r\n  const diffDaysToday = Math.ceil(diffTimeToday / (1000 * 60 * 60 * 24));\r\n\r\n  let param = 60 / diffDays\r\n  let a = ((diffDaysToday) * param)\r\n  let b = 0;\r\n\r\n  b = (a + 17).toString() + \"%\"\r\n  if (a > 63) {\r\n    b = '77%'\r\n  }\r\n  // console.log(b)\r\n  return (\r\n    <>\r\n      <div className=\"lineWrapper\">\r\n        <div className=\"basisDiv\"></div>\r\n        <div className=\"eotDiv\" data-tip=\"\" data-for=\"line2RandDate\"></div>\r\n        <div className=\"cfuDiv\" data-tip=\"\" data-for=\"line2EOT\"></div>\r\n        <div className=\"statusDiv2\" style={{ left: b }}></div>\r\n        <ReactTooltip\r\n          id=\"line2EOT\"\r\n          getContent={() => {\r\n            return <div>Randomization Date</div>;\r\n          }}\r\n        />\r\n        <ReactTooltip\r\n          id=\"line2RandDate\"\r\n          getContent={() => {\r\n            return <div>EOT Date</div>;\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Line2;\r\n","import \"./lineChart.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nexport const Line3 = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"lineWrapper\">\r\n        <div className=\"basisDiv\"></div>\r\n        <div className=\"eotDiv\" data-tip=\"\" data-for=\"line3RandDate\"></div>\r\n        <div className=\"cfuDiv\" data-tip=\"\" data-for=\"line3EOT\"></div>\r\n        <div className=\"statusDiv3\" data-tip=\"\" data-for=\"line3RandDate\"></div>\r\n        <ReactTooltip\r\n          id=\"line3EOT\"\r\n          getContent={() => {\r\n            return <div>Randomization Date</div>;\r\n          }}\r\n        />\r\n        <ReactTooltip\r\n          id=\"line3RandDate\"\r\n          getContent={() => {\r\n            return <div>EOT Date</div>;\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Line3;\r\n","import \"./lineChart.css\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nexport const Line4 = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"lineWrapper\">\r\n        <div className=\"basisDiv\"></div>\r\n        <div className=\"eotDiv\" ></div>\r\n        <div className=\"cfuDiv\" data-tip=\"\" data-for=\"line4EOT\"></div>\r\n        <div className=\"statusDiv4\" data-tip=\"\" data-for=\"line4RandDate\"></div>\r\n        <ReactTooltip\r\n          id=\"line4EOT\"\r\n          getContent={() => {\r\n            return <div>Randomization Date</div>;\r\n          }}\r\n        />\r\n        <ReactTooltip\r\n          id=\"line4RandDate\"\r\n          getContent={() => {\r\n            return <div>EOT Date</div>;\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Line4;\r\n","import { useEffect, useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { default as Select } from \"react-select\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\nimport Line from \"../TimeMaps/lineChart\";\r\nimport Line2 from \"../TimeMaps/lineChart2\";\r\nimport Line3 from \"../TimeMaps/lineChart3\";\r\nimport Line4 from \"../TimeMaps/lineChart4\";\r\nimport { authenticationService } from \"./../../../services/API\";\r\nimport loaderImage from \"./../../../Assets/images/loader.svg\";\r\nimport \"./dashboard-table.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DataTableExtensions from 'react-data-table-component-extensions';\r\nimport 'react-data-table-component-extensions/dist/index.css';\r\n\r\nconst customStyles = {\r\n  headCells: {\r\n    style: {\r\n      backgroundColor: \"#c1dbef\",\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      fontSize: '12px'\r\n    },\r\n  },\r\n};\r\n\r\nconst DashboardTable = () => {\r\n  const [data, setData] = useState([]);\r\n  const state = useSelector((state) => state)\r\n  const dispatch = useDispatch()\r\n  const getPatientsList = authenticationService.getPatientsList;\r\n  const statuses = {\r\n    status1: \"SUBJECT WAS NOT RANDOMIZED\",\r\n    status2: \"SUBJECT DID NOT REACH EOT\",\r\n    status3: \"SUBJECT COMPLETED THE STUDY\",\r\n    status4: \"SUBJECT ENTERED CFU\"\r\n  }\r\n  let sortData = []\r\n  let dataFilt = [];\r\n\r\n  useEffect(() => {\r\n    getPatientsList().then((res) => {\r\n      dispatch({\r\n        type: \"SET-DATA\",\r\n        payload: {\r\n          value: res\r\n        }\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  if (state.dataIsReturned) {\r\n    state.patientData.map((i) => {\r\n      if (i.status.id === 1) {\r\n        dataFilt.push({\r\n          \"PATIENT ID\": i.subject_id,\r\n          \"RANDOMIZATION DATE\": i.randomization_date,\r\n          \"EOT DATE\": i.eot_date,\r\n          \"STATUS\": i.status.text.toUpperCase(),\r\n        });\r\n      } else if (i.status.id === 2) {\r\n        dataFilt.push({\r\n          \"PATIENT ID\": i.subject_id,\r\n          \"RANDOMIZATION DATE\": i.randomization_date,\r\n          \"EOT DATE\": i.eot_date,\r\n          \"STATUS\": i.status.text.toUpperCase(),\r\n        });\r\n      } else if (i.status.id === 3) {\r\n        dataFilt.push({\r\n          \"PATIENT ID\": i.subject_id,\r\n          \"RANDOMIZATION DATE\": i.randomization_date,\r\n          \"EOT DATE\": i.eot_date,\r\n          \"STATUS\": i.status.text.toUpperCase(),\r\n        });\r\n      } else if (i.status.id === 4) {\r\n        dataFilt.push({\r\n          \"PATIENT ID\": i.subject_id,\r\n          \"RANDOMIZATION DATE\": i.randomization_date,\r\n          \"EOT DATE\": i.eot_date,\r\n          \"STATUS\": i.status.text.toUpperCase(),\r\n        });\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setData(dataFilt)\r\n  }, [state.dataIsReturned])\r\n\r\n\r\n  const filterFunction = (value) => {\r\n    if (value === \"1\") {\r\n      state.patientData.map(i => {\r\n        if (i.status.id === 2) {\r\n          sortData.push({\r\n            \"PATIENT ID\": i.subject_id,\r\n            \"RANDOMIZATION DATE\": i.randomization_date,\r\n            \"EOT DATE\": i.eot_date,\r\n            \"STATUS\": i.status.text.toUpperCase(),\r\n          })\r\n          setData(sortData)\r\n        }\r\n        else if (i.status.id === 3) {\r\n          sortData.push({\r\n            \"PATIENT ID\": i.subject_id,\r\n            \"RANDOMIZATION DATE\": i.randomization_date,\r\n            \"EOT DATE\": i.eot_date,\r\n            \"STATUS\": i.status.text.toUpperCase(),\r\n          })\r\n        }\r\n        else if (i.status.id === 4) {\r\n          sortData.push({\r\n            \"PATIENT ID\": i.subject_id,\r\n            \"RANDOMIZATION DATE\": i.randomization_date,\r\n            \"EOT DATE\": i.eot_date,\r\n            \"STATUS\": i.status.text.toUpperCase(),\r\n          })\r\n        }\r\n      })\r\n      setData(sortData)\r\n\r\n    }\r\n    if (value === \"2\") {\r\n      state.patientData.map(i => {\r\n        if (i.status.id === 4) {\r\n          sortData.push({\r\n            \"PATIENT ID\": i.subject_id,\r\n            \"RANDOMIZATION DATE\": i.randomization_date,\r\n            \"EOT DATE\": i.eot_date,\r\n            \"STATUS\": i.status.text.toUpperCase(),\r\n          })\r\n          setData(sortData)\r\n        }\r\n      })\r\n\r\n    }\r\n    if (value === \"0\") {\r\n      setData(dataFilt)\r\n    }\r\n  }\r\n  const columns = [\r\n    {\r\n      name: \"PATIENT ID\",\r\n      selector: \"PATIENT ID\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"STATUS\",\r\n      selector: \"STATUS\",\r\n      sortable: true,\r\n      rigth: true,\r\n      cell: (i) => <div className={i[\"STATUS\"] === statuses.status1 ? \"normalText randomizedDiv\" :\r\n        (i[\"STATUS\"] === statuses.status2 ? \"normalText status2\" :\r\n          (i[\"STATUS\"] === statuses.status3 ? \"normalText status3\" : \"normalText status4\")\r\n        )}>{i[\"STATUS\"]}</div>,\r\n    },\r\n    {\r\n      name: \"RANDOMIZATION DATE\",\r\n      selector: \"RANDOMIZATION DATE\",\r\n      sortable: true,\r\n      right: true,\r\n    },\r\n    {\r\n      name: \"EOT DATE\",\r\n      selector: \"EOT DATE\",\r\n      sortable: true,\r\n      right: true,\r\n      cell: (i) => i[\"STATUS\"] === statuses.status2 ? <div className=\"redEOTDate\"> {i[\"EOT DATE\"]} </div> : <div className=\"darkBlack\"> {i[\"EOT DATE\"]} </div>\r\n    },\r\n\r\n    // {\r\n    //   name: <Name />,\r\n    //   selector: \"A1AT\",\r\n    //   sortable: false,\r\n    //   right: true,\r\n    //   cell: (i) => {\r\n    //     switch (i[\"STATUS\"]) {\r\n    //       case statuses.status1: return <div className=\"test1\"> <div className=\"bNumber\">N/A</div> <div className=\"eotNumber\">N/A</div> <div>N/A</div> </div>;\r\n    //       case statuses.status2: return <div className=\"test1\"> <div className=\"bNumber\">90</div> <div className=\"eotNumber\">N/A</div> <div>N/A</div> </div>;\r\n    //       case statuses.status3: return <div className=\"test2\"> <div className=\"bNumber\">84</div> <div className=\"eotNumber\">102</div> <div>121.4%</div> </div>;\r\n    //       case statuses.status4: return <div className=\"test2\"> <div className=\"bNumber\">135</div> <div className=\"eotNumber\">88</div> <div>65.1%</div> </div>\r\n    //     }\r\n    //   }\r\n    // },\r\n\r\n    {\r\n      name: \"TIME/STATUS MAP\",\r\n      selector: \"TIME/STATUS MAP\",\r\n      sortable: false,\r\n      center: true,\r\n      cell: (i) => i[\"STATUS\"] === statuses.status1 ? <Line eotDate={i[\"EOT DATE\"]} randDate={i[\"RANDOMIZATION DATE\"]} /> :\r\n        (i[\"STATUS\"] === statuses.status2 ? <Line2 eotDate={i[\"EOT DATE\"]} randDate={i[\"RANDOMIZATION DATE\"]} /> :\r\n          (i[\"STATUS\"] === statuses.status3 ? <Line3 eotDate={i[\"EOT DATE\"]} randDate={i[\"RANDOMIZATION DATE\"]} /> :\r\n            <Line4 eotDate={i[\"EOT DATE\"]} randDate={i[\"RANDOMIZATION DATE\"]} />)\r\n        ),\r\n    },\r\n  ];\r\n\r\n  const options = [\r\n    { value: \"0\", label: \"All\" },\r\n    { value: \"1\", label: \"Randomized\" },\r\n    { value: \"2\", label: \"Met CFU Criteria\" },\r\n  ];\r\n  const tableData = {\r\n    columns,\r\n    data,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state.loader ? (\r\n        <div className=\"loaderDiv\">\r\n          <img src={loaderImage} className=\"img-fluid\" alt=\"\" />\r\n        </div>\r\n      ) : null}\r\n      <div>\r\n        <h1>Patients List</h1>\r\n      </div>\r\n      <div className=\"dropdwondiv\">\r\n        <div className=\"selectPopDiv\">Select Population</div>\r\n        <Select\r\n          options={options}\r\n          className=\"selectComp\"\r\n          onChange={(event) => filterFunction(event.value)}\r\n        />\r\n      </div>\r\n      {state.dataIsReturned && (\r\n        // <DataTableExtensions\r\n        //   print={true}\r\n        //   export={true}\r\n        //   {...tableData}\r\n        // >\r\n          <DataTable\r\n            noHeader\r\n            title=\"\"\r\n            columns={columns}\r\n            data={data}\r\n            customStyles={customStyles}\r\n            Clicked\r\n          />\r\n        //  </DataTableExtensions> \r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardTable;","import \"./dashboard.css\";\r\nimport DashboardTable from \"./DashboardTable/DashboardTable\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Dashboard = () => {\r\n  var today = new Date();\r\n  var date =\r\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n  const state = useSelector((state) => state)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dashboardWrapper\">\r\n        <div className=\"titleDate\">\r\n          <div className=\"title\">\r\n            <h3>Summary Dashboard-CFU</h3>\r\n          </div>\r\n          <div className=\"today\">\r\n            <h3>{date}</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"cardsWrapper\">\r\n          <div className=\"subjectsCard\">\r\n            <div className=\"cardHeader allSubjectsHeader\">All Subjects</div>\r\n            <span className=\"textInSubjectCard\">\r\n              <h4>{state.dataIsReturned && state.patientData.filter(i => i.status.id).length}</h4>\r\n            </span>\r\n          </div>\r\n          <div className=\"randomizationCard\">\r\n            <div className=\"cardHeader randomizedHeader\"> Randomized</div>\r\n            <span className=\"textInSubjectCard\">\r\n              <h4>{state.dataIsReturned && state.patientData.filter(i => i.status.id > 1).length}</h4>\r\n            </span>\r\n          </div>\r\n          <div className=\"inTEO\">\r\n            <div className=\"cardHeader EOTSubjectsHeader\">In Treatment Window</div>\r\n            <span className=\"textInSubjectCard\">\r\n              <h4>{state.dataIsReturned && state.patientData.filter(i => i.status.id === 2).length}</h4>\r\n            </span>\r\n          </div>\r\n          <div className=\"notCFU\">\r\n            <div className=\"cardHeader CFUSubjectsHeader\"> Reached EOT, Did Not Meet CFU</div>\r\n            <span className=\"textInSubjectCard\">\r\n              <h4>{state.dataIsReturned && state.patientData.filter(i => i.status.id === 3).length}</h4>\r\n            </span>\r\n          </div>\r\n          <div className=\"inCFU\">\r\n            <div className=\"cardHeader CFUSubjectsHeader\">Met CFU Criteria</div>\r\n            <span className=\"textInSubjectCard\">\r\n              <h4>{state.dataIsReturned && state.patientData.filter(i => i.status.id === 4).length}</h4>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboardTable\">\r\n          <DashboardTable />\r\n          <div className=\"prejectDateDiv\">*Note: Projected Date</div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { default as Select } from \"react-select\";\r\nimport { authenticationService } from \"../../services/API\";\r\nimport \"./create-request.css\";\r\nimport loaderImage from \"./../../Assets/images/loader.svg\"\r\nimport { Redirect } from \"react-router\";\r\nimport { FaInfoCircle } from \"react-icons/fa\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\n\r\nconst CreateUserRequest = () => {\r\n    let [state, setState] = useState({\r\n        name: null,\r\n        email: null,\r\n        site: \"\",\r\n        access_level: null\r\n    })\r\n    let [infoBuble, setInfoBuble] = useState(false)\r\n    let [readOnly, setReadOnly] = useState(false)\r\n\r\n    let [loader, setLoader] = useState(false)\r\n    const [succesNoty, setSuccesNoty] = useState(false)\r\n    const [selectValid, setSelectValid] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module == 3) {\r\n            setState({\r\n                ...state,\r\n                access_level: \"Site User\"\r\n            })\r\n        }\r\n    }, [])\r\n\r\n\r\n    const options = [\r\n        { value: \"Site User\", label: \"Site User\" },\r\n        { value: \"Dicerna User\", label: \"Dicerna User\" },\r\n    ];\r\n    return (\r\n        <>\r\n            {succesNoty && (<Redirect\r\n                to={{\r\n                    pathname: \"/create-user\",\r\n                    state: { succesNotify: true }\r\n                }}\r\n            />\r\n            )\r\n            }\r\n            {loader ? <div className=\"loaderDiv\"><img src={loaderImage} className=\"img-fluid\" alt=\"\" /></div> : null}\r\n            <div className=\"backUsersListDiv\">\r\n                <Link to=\"/create-user\" className=\"toUsersListLink\">\r\n                    Back\r\n                </Link>\r\n            </div>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if (state.site.trim() && state.name.trim() && state.email.trim() && state.access_level) {\r\n                    setLoader(true)\r\n                    authenticationService.createUser(state.name, state.email, state.site, state.access_level).then(res => {\r\n                        localStorage.setItem(\"createsLengthStorage\", true)\r\n\r\n                        setLoader(false)\r\n                        setSuccesNoty(true)\r\n                    })\r\n                }\r\n                else if (!state.access_level) {\r\n                    setSelectValid(true)\r\n                }\r\n            }\r\n            }>\r\n                <div className=\"createRequestWrapper\">\r\n                    <div className=\"createRequestHeader\">\r\n                        <h4>\r\n                            Create User\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"createRequestMain\">\r\n                        <div className=\"userNameInfoDiv\">\r\n                            <label>User Name</label>\r\n                            <FaInfoCircle data-tip=\"\" data-for=\"userName\" /> <ReactTooltip\r\n                                id=\"userName\"\r\n                                getContent={() => {\r\n                                    return <div>First Name and Last Name</div>;\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <input pattern=\".*\\S+.*\" required type=\"text\" name=\"username\" placeholder=\"User Name\" className=\"form-control\" onChange={(e) => {\r\n                            setState({\r\n                                ...state,\r\n                                name: e.target.value\r\n                            })\r\n                        }} />\r\n                        <label>Email</label>\r\n                        <input type=\"text\" name=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required placeholder=\"Email\" className=\"form-control\" onChange={(e) => {\r\n                            setState({\r\n                                ...state,\r\n                                email: e.target.value\r\n                            })\r\n                        }} />\r\n                        <label>Access Level</label>\r\n                        {JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module == 2 ? <Select\r\n                            pattern=\".*\\S+.*\"\r\n                            required\r\n                            options={options}\r\n                            className={selectValid && \"selectAcces\"}\r\n                            onChange={(e) => {\r\n                                if (e.value === \"Dicerna User\" || e.value === \"Dicerna Admin\") {\r\n                                    setState({\r\n                                        ...state,\r\n                                        access_level: e.value,\r\n                                        site: \"All Sites\"\r\n                                    })\r\n                                    setReadOnly(true)\r\n                                    setInfoBuble(false)\r\n                                }\r\n                                else if (e.value === \"Site User\") {\r\n                                    setState({\r\n                                        ...state,\r\n                                        access_level: e.value,\r\n                                        site: \"\"\r\n                                    })\r\n                                    setReadOnly(false)\r\n                                    setInfoBuble(true)\r\n                                }\r\n                                setSelectValid(false)\r\n                            }}\r\n                        /> : <input required name=\"site\" type=\"text\" placeholder=\"Please enter Site Number\" value={\"Site User\"} className=\"form-control\"\r\n                            readOnly={true} />}\r\n                        {selectValid && <h5 className=\"accessLevelValid\">Please Select Access Level</h5>}\r\n                        <div className=\"siteInfo\">\r\n                            <label>Site</label>\r\n                            {(infoBuble || JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module == 3) ? <> <FaInfoCircle data-tip=\"\" data-for=\"siteInfo\" /> <ReactTooltip\r\n                                id=\"siteInfo\"\r\n                                getContent={() => {\r\n                                    return <div>Site Number: XXX-XXX</div>;\r\n                                }}\r\n                            /> </> : null}\r\n                        </div>\r\n\r\n                        <input required name=\"site\" type=\"text\" placeholder=\"Please enter Site Number\" value={state.site} className=\"form-control\" onChange={(e) => {\r\n                            setState({\r\n                                ...state,\r\n                                site: e.target.value\r\n                            })\r\n                        }} readOnly={readOnly ? true : false} />\r\n                    </div>\r\n                    <div className=\"createRequestFooter\">\r\n                        <button type=\"submit\" className='createUserBtn' >Submit</button>\r\n                    </div>\r\n                </div >\r\n            </form>\r\n        </>)\r\n}\r\n\r\nexport default CreateUserRequest;","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authenticationService } from \"../../services/API\";\r\nimport Moment from 'react-moment';\r\nimport loaderImage from './../../Assets/images/loader.svg'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport \"./create-user.css\"\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst CreateUser = () => {\r\n    const [state, setState] = useState({\r\n        loader: true,\r\n        requests: null\r\n    })\r\n    const notify = () => {\r\n        toast.success(\"User Request created successfully !!!\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n    let createsLengthStorage = null\r\n    useEffect(() => {\r\n        authenticationService.getCreate().then(res =>\r\n            setState({\r\n                loader: false,\r\n                requests: res.requests\r\n            })\r\n        )\r\n    }, [])\r\n    if (!localStorage.getItem(\"createsLengthStorage\")) {\r\n        if (state.requests) {\r\n            localStorage.setItem(\"createsLengthStorage\", false)\r\n        }\r\n    }\r\n    createsLengthStorage = JSON.parse(localStorage.getItem(\"createsLengthStorage\"))\r\n    useEffect(() => {\r\n        if (state.requests)\r\n            if (createsLengthStorage) {\r\n                notify()\r\n                localStorage.setItem(\"createsLengthStorage\", false)\r\n            }\r\n    }, [state.loader])\r\n    return <>\r\n        < ToastContainer />\r\n        <div className=\"createBtnDiv\">\r\n            <Link className=\"createReqLink\" to=\"/create-user-request\">\r\n                <button\r\n                    className=\"revokeAccesBtn\">\r\n                    Create Request\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        {state.loader ? <div className=\"loaderDiv\"><img src={loaderImage} className=\"img-fluid\" alt=\"\" /></div> : null}\r\n        {(state.requests &&\r\n            <div className=\"usersListWrapper\">\r\n                <table className='custom-table  table-responsive-md '>\r\n                    <thead >\r\n                        <tr className=\"headTr\">\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    #\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Access Requester\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Name\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Email\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Site Name\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Access Privileges\r\n                                </h4>\r\n                            </th>\r\n                            <th className='createdAt '>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Created at\r\n                                </h4>\r\n                            </th>\r\n                            <th className='statusRevoke '>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Status\r\n                                </h4>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {state.requests.map((i, v) => {\r\n                            return <tr key={v} className='tbodyTr'>\r\n                                <td className=\"firsTd\">\r\n                                    <h4>{state.requests.length - v}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.user.name}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.name}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.email}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.site === \"*\" ? \"All Sites\" : i.site}</h4>\r\n                                </td>\r\n                                <td >\r\n                                    <h4>{i.access_level}</h4>\r\n                                </td>\r\n                                <td className='lastTd'>\r\n                                    <h4><Moment format=\"YYYY-MM-DD HH:mm:ss\">{i.created_at}</Moment></h4>\r\n                                </td>\r\n                                <td className={i.status === \"open\" ? \"statusOpenClass\" : null}>\r\n                                    <h4>{i.status}</h4>\r\n                                </td>\r\n                            </tr>\r\n                        }\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )}\r\n    </>\r\n}\r\n\r\nexport default CreateUser;","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authenticationService } from \"../../services/API\";\r\nimport Moment from 'react-moment';\r\nimport loaderImage from './../../Assets/images/loader.svg'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport \"./revoke-user.css\"\r\n// import { useSelector } from \"react-redux\";\r\n\r\nconst RevokeUser = (props) => {\r\n\r\n    const notify = () => {\r\n        toast.success(\"User Revoke Request created successfully !!!\", {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n    let revokesLengthStorage = null\r\n    const [state, setState] = useState({\r\n        loader: true,\r\n        revokes: null,\r\n        succesNotify: false\r\n    })\r\n    useEffect(() => {\r\n        authenticationService.getRevoke().then(res =>\r\n            setState({\r\n                ...state,\r\n                loader: false,\r\n                revokes: res.revokes\r\n            }),\r\n\r\n        )\r\n    }, [])\r\n\r\n    if (!localStorage.getItem(\"revokesLength\")) {\r\n        if (state.revokes) {\r\n            localStorage.setItem(\"revokesLength\", false)\r\n        }\r\n    }\r\n    revokesLengthStorage = JSON.parse(localStorage.getItem(\"revokesLength\"))\r\n\r\n    useEffect(() => {\r\n        if (state.revokes)\r\n            if (revokesLengthStorage) {\r\n                notify()\r\n                localStorage.setItem(\"revokesLength\", false)\r\n            }\r\n    }, [state.loader])\r\n    return <>\r\n        < ToastContainer />\r\n        <div className=\"createBtnDiv\">\r\n            <Link className=\"createReqLink\" to=\"/revoke-user-request\">\r\n                <button\r\n                    className=\"revokeAccesBtn\"\r\n                >\r\n                    Revoke Access Request\r\n                </button>\r\n            </Link>\r\n        </div>\r\n        {state.loader ? <div className=\"loaderDiv\"><img src={loaderImage} className=\"img-fluid\" alt=\"\" /></div> : null}\r\n        {(state.revokes &&\r\n            <div className=\"usersListWrapper\">\r\n                <table className='custom-table  table-responsive-md '>\r\n                    <thead >\r\n                        <tr className=\"headTr\">\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    #\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Revoke Requester\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    User Name\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    User Email\r\n                                </h4>\r\n                            </th>\r\n                            <th>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Comment\r\n                                </h4>\r\n                            </th>\r\n                            <th className='createdAt '>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Created at\r\n                                </h4>\r\n                            </th>\r\n                            <th className='statusRevoke '>\r\n                                <h4 className=\"headerTrTh\">\r\n                                    Status\r\n                                </h4>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {state.revokes.map((i, v) => {\r\n                            return <tr key={v} className='tbodyTr'>\r\n                                <td className=\"firsTd\">\r\n                                    <h4>{state.revokes.length - v}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.creator ? i.creator.name : null}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.user ? i.user.name : null}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.user ? i.user.email : null}</h4>\r\n                                </td>\r\n                                <td>\r\n                                    <h4>{i.comment}</h4>\r\n                                </td>\r\n                                <td className='lastTd'>\r\n                                    <h4><Moment format=\"YYYY-MM-DD HH:mm:ss\">{i.created_at}</Moment></h4>\r\n                                </td>\r\n                                <td className={i.status == \"open\" ? \"statusOpenClass\" : null} >\r\n                                    <h4>{i.status}</h4>\r\n                                </td>\r\n                            </tr>\r\n                        }\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )}\r\n    </>\r\n}\r\n\r\nexport default RevokeUser;","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { default as Select } from \"react-select\";\r\nimport \"./revoke-user-request.css\";\r\nimport { authenticationService } from \"../../services/API\";\r\nimport loaderImage from \"./../../Assets/images/loader.svg\"\r\nimport { Redirect } from \"react-router\";\r\n\r\nconst RevokeUserRequest = () => {\r\n    let [state, setState] = useState({\r\n        user_id: null,\r\n        comment: \"\"\r\n    })\r\n    let [loader, setLoader] = useState(false)\r\n    const [succesNoty, setSuccesNoty] = useState(false)\r\n    const [commentFiledReq, setCommentFiledReq] = useState(\"\")\r\n    const [selectReq, setSelectReq] = useState(false)\r\n    const options = [];\r\n\r\n    let [usersList, setUsersList] = useState(null)\r\n    useEffect(() => {\r\n        authenticationService.getUsersList().then(async (res) => {\r\n            setUsersList(res)\r\n        })\r\n    }, [])\r\n\r\n    if (usersList) {\r\n        usersList.map((i, v) => {\r\n            if (JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module == 2) {\r\n                if (i.users_module !== 2) {\r\n                    options.push({\r\n                        value: i.id,\r\n                        label: i.name + \" | \" + i.email\r\n                    })\r\n                }\r\n            }\r\n            else if (JSON.parse(localStorage.getItem('cfuCurrentUser')).user.users_module == 3) {\r\n                if (i.users_module == 0) {\r\n                    options.push({\r\n                        value: i.id,\r\n                        label: i.name + \" | \" + i.email\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    // [\r\n    //     { value: \"1\", label: \"1\" },\r\n    //     { value: \"2\", label: \"2\" },\r\n    //     { value: \"3\", label: \"3\" },\r\n    // ];\r\n    return (\r\n        <>\r\n            {succesNoty && (<Redirect\r\n                to={{\r\n                    pathname: \"/revoke-user\",\r\n                    state: { succesNotify: true }\r\n                }}\r\n            />\r\n            )\r\n            }\r\n            {loader ? <div className=\"loaderDiv\"><img src={loaderImage} className=\"img-fluid\" alt=\"\" /></div> : null}\r\n            <div className=\"backBtnHrDiv\">\r\n                <Link to=\"/revoke-user\" className=\"toRevokeListLink\">\r\n                    Back\r\n                </Link>\r\n                <hr className=\"revokeUserHr\"></hr>\r\n            </div>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault();\r\n                if (!state.user_id) {\r\n                    setSelectReq(true)\r\n                }\r\n                if (state.user_id && state.comment) {\r\n                    setLoader(true)\r\n                    authenticationService.revokeUser(state.user_id, state.comment).then(res => {\r\n                        localStorage.setItem(\"revokesLength\", true)\r\n                        setSuccesNoty(true)\r\n                        setLoader(false)\r\n                    }).catch(e => {\r\n                        setCommentFiledReq(e.comment)\r\n                        setLoader(false)\r\n                    })\r\n                }\r\n            }\r\n            }>\r\n                <div className=\"revokeUserWrapper\">\r\n                    <div className=\"revokeUserSelectDiv\">\r\n                        <label>User Name</label>\r\n                        <Select\r\n                            options={options}\r\n                            className={selectReq ? \"selectFieldReq selectRevokeUser\" : \"selectRevokeUser\"}\r\n                            onChange={(e) => {\r\n                                setSelectReq(false)\r\n                                setState({\r\n                                    ...state,\r\n                                    user_id: e.value\r\n                                })\r\n                            }}\r\n                        />\r\n                        {selectReq && <div className=\"selectDivReq\">Please Select User Name</div>}\r\n                    </div>\r\n                    <label>Comment</label>\r\n                    <textarea required pattern=\"\\S(.*\\S)?\" className={commentFiledReq ? \"fieldReq\" : null} id=\"comment\" name=\"comment\" value={state.comment} rows=\"4\" cols=\"50\" onChange={(e) => {\r\n                        setCommentFiledReq(\"\")\r\n                        setState({\r\n                            ...state,\r\n                            comment: e.target.value\r\n                        })\r\n                    }}>\r\n                    </textarea>\r\n                    {commentFiledReq && <div className=\"commentFieldReq\">{commentFiledReq}</div>}\r\n                    <div className=\"revokeRequestFooter\">\r\n                        <button className='revokeUserBtn' type=\"submit\" >Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>)\r\n}\r\n\r\nexport default RevokeUserRequest;","import React, { useEffect } from \"react\";\r\nimport { Switch, Route, useLocation, Redirect } from \"react-router-dom\";\r\nimport { PrivateRoute, DicernaAdminRoute } from \"./PrivateRoute/PrivateRoute\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport SideBar from \"./Components/SideBar/SideBar\";\r\nimport { LoginPage } from \"./Components/LoginPage/LoginPage\";\r\nimport Search from \"./Components/Search/Search\";\r\nimport ChangePassword from './Components/ChangePassword/ChangePassword';\r\nimport Footer from './Components/Footer/footer';\r\nimport PrivacyPolicy from \"./Components/PrivacyPolicy/PrivacyPolicy\";\r\nimport TermsConditions from \"./Components/TermsConditions/TermsConditions\";\r\nimport UsersList from \"./Components/UsersList/UsersList\";\r\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\r\nimport CreateUserRequest from \"./Components/CreateUserRequest/CreateUserRequest\"\r\nimport CreateUser from \"./Components/CreateUser/CreateUser\";\r\nimport RevokeUser from \"./Components/RevokeUser/RevokeUser\";\r\nimport RevokeUserRequest from \"./Components/RevokeUserRequest/RevokeUserRequest\";\r\nimport PageNotFound from \"./Components/PageNotFound/PageNotFound\";\r\nimport \"./App.css\";\r\n\r\n\r\nconst App = (props) => {\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    (document.getElementById(\"content\") && document.getElementById(\"content\").scrollTo(0, 0));\r\n    window.scrollTo(0, 0)\r\n  }, [location.pathname]);\r\n  const currentUser = JSON.parse(localStorage.getItem(\"cfuCurrentUser\"))\r\n  return (\r\n    <>\r\n      <>\r\n        {currentUser ?\r\n          <>\r\n            <Header user={props.user} />\r\n            <div className=\"wrapper\">\r\n              <SideBar />\r\n              <div id=\"content\" className=\"content\">\r\n                <Switch>\r\n                  <PrivateRoute exact path=\"/change-password\" component={ChangePassword} />\r\n                  <PrivateRoute exact path=\"/\" component={currentUser.user.users_module === 0 ? Search : Dashboard} />\r\n                  <PrivateRoute exact path=\"/search\" component={Search} />\r\n                  <DicernaAdminRoute exact path=\"/create-user-request\" component={CreateUserRequest} />\r\n                  <DicernaAdminRoute exact path=\"/create-user\" component={CreateUser} />\r\n                  <DicernaAdminRoute exact path=\"/users-list\" component={UsersList} />\r\n                  <DicernaAdminRoute exact path=\"/revoke-user\" component={RevokeUser} />\r\n                  <DicernaAdminRoute exact path=\"/revoke-user-request\" component={RevokeUserRequest} />\r\n                  <Route exact path=\"/privacy-policy\" component={PrivacyPolicy} />\r\n                  <Route exact path=\"/terms-and-conditions\" component={TermsConditions} />\r\n                  <Route component={PageNotFound} />\r\n                </Switch>\r\n              </div>\r\n            </div>\r\n          </> : <Redirect to=\"/login\" />}\r\n        <Route exact path=\"/login\" component={LoginPage} />\r\n        <Route exact path=\"/privacy-policy\" component={!currentUser && PrivacyPolicy} />\r\n        <Route exact path=\"/terms-and-conditions\" component={!currentUser && TermsConditions} />\r\n        <Footer />\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { App };","let initialState = {\r\n    dataIsReturned: false,\r\n    patientData: [],\r\n    success: false,\r\n    loader: true\r\n}\r\n\r\nlet patientInfo = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"SET-DATA\":\r\n            return {\r\n                ...state,\r\n                dataIsReturned: true,\r\n                patientData: action.payload.value,\r\n                loader: false\r\n            }\r\n        case \"SUCCESS\": return {\r\n            ...state,\r\n            success: false\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default patientInfo;","import { createStore } from \"redux\";\r\nimport patientInfo from \"../reducers/patient-info-reducer\";\r\n\r\nconst store = createStore(patientInfo)\r\n\r\nexport  default store","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { App } from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\"\r\nimport { Router } from 'react-router-dom'\r\nimport { history } from \"./helpers/history\"\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <App />\r\n        </Router>\r\n    </Provider >,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}